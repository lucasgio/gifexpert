{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifAppItem.js","components/GifGridd.js","hooks/useFetchGIfs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","className","type","placeholder","onChange","e","target","value","aria-label","onClick","preventDefault","trim","length","cats","propsType","PropTypes","func","isRequired","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifAppItem","style","width","src","alt","GifGridd","loading","state","setState","useEffect","then","imgs","useFetchGIfs","GiftExpertApp","categories","href","height","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","class","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61190a1d.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddCategory( {setCategories} ) {\r\n        \r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const inputHandleValue = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n     const InputSubmitValue = (e)=> {\r\n         e.preventDefault();\r\n         if(inputValue.trim().length > 2 ){ \r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setinputValue(\"\");\r\n         }\r\n     }\r\n\r\n     return (\r\n        <>\r\n        <form className=\"d-flex\">\r\n         <input className=\"form-control me-2\" type=\"search\" placeholder={inputValue} onChange={inputHandleValue} aria-label=\"Search\" />\r\n         <button className=\"btn btn-primary\" onClick={InputSubmitValue} >Search</button>\r\n        </form> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n\r\nAddCategory.propsType = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n  export const getGif = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=6&api_key=jlGUprPYUme42IrUPOVinVQ14MMUNF54`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifs;\r\n  }","import React from 'react'\r\n\r\nfunction GifAppItem({title,url}) {\r\n\r\n    return (\r\n\r\n      <>\r\n      <div className=\"card animate__animated animate__lightSpeedInRight\" style={{ width: \"18rem\" }}>\r\n        <img src={url} className=\"card-img-top\" alt=\"...\" />\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\">{title}</p>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default GifAppItem\r\n","import React from \"react\";\r\nimport { useFetchGIfs } from \"../hooks/useFetchGIfs\";\r\nimport GifAppItem from \"./GifAppItem\";\r\n\r\n\r\n\r\nfunction GifGridd({ category }) {\r\n  const {data:images,loading} =  useFetchGIfs(category);\r\n  return (\r\n    <div>\r\n      <h3 className=\"display-6\">{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__pulse\">Loading....</p>}\r\n        <div className=\"row\">\r\n            {images.map((img) => {\r\n              return <GifAppItem key={img.id} {...img} />;\r\n            })}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GifGridd;\r\n","import { useState, useEffect } from \"react\";\r\nimport {getGif} from '../helpers/getGif'\r\n\r\nexport function useFetchGIfs(category) {\r\n\r\n    const [state, setState] = useState({\r\n    \r\n       data:[],\r\n       loading:true\r\n        \r\n    })    \r\n\r\n    useEffect(() => {\r\n        getGif(category)\r\n            .then( imgs => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })      \r\n            }) \r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGridd from \"./components/GifGridd\";\r\n\r\nfunction GiftExpertApp() {\r\n  const [categories, setCategories] = useState([]);\r\n  return (\r\n    <div>\r\n      <header id=\"gifexpert\">\r\n        {/* Fixed navbar */}\r\n        <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#gifexpert\">\r\n              <img\r\n                src=\"./assets/logo128.png\"\r\n                alt=\"\"\r\n                width=\"32\"\r\n                height=\"32\"\r\n                id=\"logo\"\r\n                className=\"d-inline-block align-text-top\"\r\n              />\r\n              GiftExpertApp\r\n            </a>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarCollapse\"\r\n              aria-controls=\"navbarCollapse\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\" />\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-md-0\"></ul>\r\n              <AddCategory setCategories={setCategories} />\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n      {/* Begin page content */}\r\n      <main className=\"flex-shrink-0\">\r\n        <div class=\"p-5 mb-4 bg-light rounded-3\">\r\n          <div class=\"container-fluid py-5\">\r\n            <h1 class=\"display-5 fw-bold\">Search your favorite giff</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"container-fluid\">\r\n          <ul>\r\n            {categories.map((category) => {\r\n              return <GifGridd key={category} category={category} />;\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GiftExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}